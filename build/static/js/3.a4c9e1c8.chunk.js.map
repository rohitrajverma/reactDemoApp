{"version":3,"sources":["components/ImageWithFallback.js","components/Product.js","containers/ProductList.js"],"names":["ImageWithFallback","props","React","useState","source","imgSrc","updateImage","src","alt","className","style","height","onError","Product","stock","wishlist","disabled","this","pData","currencyCode","Column","colSize","productImage","productName","productPrice","_renderButton","productStock","Component","ProductList","state","pList","getProducts","Axios","get","then","res","console","log","setState","data","catch","err","map","value","key","productId","selectedCurrency","connect","store","currency"],"mappings":"8KAqBeA,MAlBf,SAA2BC,GAAO,MAGJC,IAAMC,SAASF,EAAMG,QAHjB,mBAG3BC,EAH2B,KAGnBC,EAHmB,KAIhC,OACE,yBACEC,IAAKF,EACLG,IAAK,GACLC,UAAU,gBACVC,MAAO,CAAEC,OAAQ,SACjBC,QAAS,kBACPN,EACE,0HC2BKO,E,4KApCCC,EAAOC,GACnB,OAAID,EAEA,4BAAQL,UAAU,oCAAlB,UACUM,EAAW,WAAa,QAKpC,4BAAQC,UAAQ,EAACP,UAAU,mCAA3B,kB,+BAKM,IAAD,EACmCQ,KAAKhB,MAAvCiB,EADD,EACCA,MAAOH,EADR,EACQA,SAAUI,EADlB,EACkBA,aACzB,OACE,kBAACC,EAAA,EAAD,CAAQC,QAAS,GACf,yBAAKZ,UAAU,kCACb,kBAAC,EAAD,CAAmBL,OAAQc,EAAMI,eACjC,4BAAKJ,EAAMK,aACX,4BACGJ,EADH,IACkBD,EAAMM,cAEvBP,KAAKQ,cAAcP,EAAMQ,aAAcX,S,GAzB5Bb,IAAMyB,W,yBCAtBC,E,4MACJC,MAAQ,CAAEC,MAAO,I,kEAGfb,KAAKc,gB,oCAGQ,IAAD,OAGZC,IAAMC,IADJ,iGAECC,MAAK,SAACC,GACLC,QAAQC,IAAI,UAAWF,GACvB,EAAKG,SAAS,CAAER,MAAOK,EAAII,UAE5BC,OAAM,SAACC,GACNL,QAAQC,IAAI,QAASI,Q,+BAIjB,IAAD,OACCX,EAAUb,KAAKY,MAAfC,MAER,OACE,yBAAKrB,UAAU,OACZqB,EAAMY,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,CACEzB,MAAOyB,EACPC,IAAKD,EAAME,UACX1B,aAAc,EAAKlB,MAAM6C,2B,GA7BX5C,IAAMyB,WA6CjBoB,uBANS,SAACC,GACvB,MAAO,CACLF,iBAAkBE,EAAMC,YAIbF,CAAyBnB","file":"static/js/3.a4c9e1c8.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction ImageWithFallback(props) {\n  // use state hook\n  // let [state_variable,setState_function] = React.useState(initial value);\n  let [imgSrc, updateImage] = React.useState(props.source);\n  return (\n    <img\n      src={imgSrc}\n      alt={\"\"}\n      className=\"img-thumbnail\"\n      style={{ height: \"300px\" }}\n      onError={() =>\n        updateImage(\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/1200px-No_image_available.svg.png\"\n        )\n      }\n    />\n  );\n}\nexport default ImageWithFallback;\nImageWithFallback.propTypes = {\n  source: PropTypes.string.isRequired,\n};\n\n// original.jpg\n// fails to load : fallback.jpg\n\n// state : initialize the state, use setstate to update the state\n// state:{variable:value, variable1:value1,variable2:value2}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Column from \"./Column\";\nimport ImageWithFallback from \"./ImageWithFallback\";\n\nclass Product extends React.Component {\n  _renderButton(stock, wishlist) {\n    if (stock) {\n      return (\n        <button className=\"btn btn-primary btn-sm btn-block\">\n          Add to {wishlist ? \"Wishlist\" : \"Cart\"}\n        </button>\n      );\n    }\n    return (\n      <button disabled className=\"btn btn-danger btn-sm btn-block\">\n        Out of Stock\n      </button>\n    );\n  }\n  render() {\n    const { pData, wishlist, currencyCode } = this.props;\n    return (\n      <Column colSize={4}>\n        <div className=\"shadow-sm p-2 text-center mb-4\">\n          <ImageWithFallback source={pData.productImage} />\n          <h2>{pData.productName}</h2>\n          <h3>\n            {currencyCode} {pData.productPrice}\n          </h3>\n          {this._renderButton(pData.productStock, wishlist)}\n\n          {/* {pData.productStock ? (\n            <button>Add to Cart</button>\n          ) : (\n            <p>Out of Stock</p>\n          )} */}\n        </div>\n      </Column>\n    );\n  }\n}\nexport default Product;\n// prop validations\nProduct.propTypes = {\n  pData: PropTypes.object.isRequired,\n  wishlist: PropTypes.bool,\n};\n","import React from \"react\";\nimport Product from \"../components/Product\";\nimport Axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nclass ProductList extends React.Component {\n  state = { pList: [] };\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  getProducts() {\n    const url =\n      \"https://raw.githubusercontent.com/mdmoin7/Random-Products-Json-Generator/master/products.json\";\n    Axios.get(url)\n      .then((res) => {\n        console.log(\"success\", res);\n        this.setState({ pList: res.data });\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n      });\n  }\n\n  render() {\n    const { pList } = this.state;\n\n    return (\n      <div className=\"row\">\n        {pList.map((value) => (\n          <Product\n            pData={value}\n            key={value.productId}\n            currencyCode={this.props.selectedCurrency}\n          />\n        ))}\n        {/* <Product pData={pList} wishlist={true} /> */}\n        {/* <Product /> */}\n      </div>\n    );\n  }\n}\n\nconst mapStoreToProps = (store) => {\n  return {\n    selectedCurrency: store.currency,\n  };\n};\n// connect(how to connect)(what to connect/component)\nexport default connect(mapStoreToProps)(ProductList);\n"],"sourceRoot":""}