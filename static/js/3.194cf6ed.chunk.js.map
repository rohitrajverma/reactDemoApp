{"version":3,"sources":["components/ImageWithFallback.js","components/Product.js","containers/ProductList.js"],"names":["ImageWithFallback","props","React","useState","source","imgSrc","updateImage","src","alt","className","style","height","onError","Product","stock","wishlist","disabled","this","pData","currencyCode","Column","colSize","productImage","productName","productPrice","_renderButton","productStock","Component","ProductList","state","pList","getProducts","Axios","get","then","res","console","log","setState","data","catch","err","map","value","key","productId","selectedCurrency","connect","store","currency"],"mappings":"+KAqBeA,MAlBf,SAA2BC,GAAO,MAGJC,IAAMC,SAASF,EAAMG,QAHjB,mBAG3BC,EAH2B,KAGnBC,EAHmB,KAIhC,OACE,yBACEC,IAAKF,EACLG,IAAK,GACLC,UAAU,gBACVC,MAAO,CAAEC,OAAQ,SACjBC,QAAS,kBACPN,EACE,0HC2BKO,E,4KApCCC,EAAOC,GACnB,OAAID,EAEA,4BAAQL,UAAU,oCAAlB,UACUM,EAAW,WAAa,QAKpC,4BAAQC,UAAQ,EAACP,UAAU,mCAA3B,kB,+BAKM,IAAD,EACmCQ,KAAKhB,MAAvCiB,EADD,EACCA,MAAOH,EADR,EACQA,SAAUI,EADlB,EACkBA,aACzB,OACE,kBAACC,EAAA,EAAD,CAAQC,QAAS,GACf,yBAAKZ,UAAU,kCACb,kBAAC,EAAD,CAAmBL,OAAQc,EAAMI,eACjC,4BAAKJ,EAAMK,aACX,4BACGJ,EADH,IACkBD,EAAMM,cAEvBP,KAAKQ,cAAcP,EAAMQ,aAAcX,S,GAzB5Bb,IAAMyB,W,yBCAtBC,E,4MACJC,MAAQ,CAAEC,MAAO,I,kEAGfb,KAAKc,gB,oCAGQ,IAAD,OAGZC,IAAMC,IADJ,iGAECC,MAAK,SAACC,GACLC,QAAQC,IAAI,UAAWF,GACvB,EAAKG,SAAS,CAAER,MAAOK,EAAII,UAE5BC,OAAM,SAACC,GACNL,QAAQC,IAAI,QAASI,Q,+BAIjB,IAAD,OACCX,EAAUb,KAAKY,MAAfC,MAER,OACE,yBAAKrB,UAAU,OACZqB,EAAMY,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,CACEzB,MAAOyB,EACPC,IAAKD,EAAME,UACX1B,aAAc,EAAKlB,MAAM6C,2B,GA7BX5C,IAAMyB,WA6CjBoB,uBANS,SAACC,GACvB,MAAO,CACLF,iBAAkBE,EAAMC,YAIbF,CAAyBnB","file":"static/js/3.194cf6ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ImageWithFallback(props) {\r\n  // use state hook\r\n  // let [state_variable,setState_function] = React.useState(initial value);\r\n  let [imgSrc, updateImage] = React.useState(props.source);\r\n  return (\r\n    <img\r\n      src={imgSrc}\r\n      alt={\"\"}\r\n      className=\"img-thumbnail\"\r\n      style={{ height: \"300px\" }}\r\n      onError={() =>\r\n        updateImage(\r\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/1200px-No_image_available.svg.png\"\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\nexport default ImageWithFallback;\r\nImageWithFallback.propTypes = {\r\n  source: PropTypes.string.isRequired,\r\n};\r\n\r\n// original.jpg\r\n// fails to load : fallback.jpg\r\n\r\n// state : initialize the state, use setstate to update the state\r\n// state:{variable:value, variable1:value1,variable2:value2}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Column from \"./Column\";\r\nimport ImageWithFallback from \"./ImageWithFallback\";\r\n\r\nclass Product extends React.Component {\r\n  _renderButton(stock, wishlist) {\r\n    if (stock) {\r\n      return (\r\n        <button className=\"btn btn-primary btn-sm btn-block\">\r\n          Add to {wishlist ? \"Wishlist\" : \"Cart\"}\r\n        </button>\r\n      );\r\n    }\r\n    return (\r\n      <button disabled className=\"btn btn-danger btn-sm btn-block\">\r\n        Out of Stock\r\n      </button>\r\n    );\r\n  }\r\n  render() {\r\n    const { pData, wishlist, currencyCode } = this.props;\r\n    return (\r\n      <Column colSize={4}>\r\n        <div className=\"shadow-sm p-2 text-center mb-4\">\r\n          <ImageWithFallback source={pData.productImage} />\r\n          <h2>{pData.productName}</h2>\r\n          <h3>\r\n            {currencyCode} {pData.productPrice}\r\n          </h3>\r\n          {this._renderButton(pData.productStock, wishlist)}\r\n\r\n          {/* {pData.productStock ? (\r\n            <button>Add to Cart</button>\r\n          ) : (\r\n            <p>Out of Stock</p>\r\n          )} */}\r\n        </div>\r\n      </Column>\r\n    );\r\n  }\r\n}\r\nexport default Product;\r\n// prop validations\r\nProduct.propTypes = {\r\n  pData: PropTypes.object.isRequired,\r\n  wishlist: PropTypes.bool,\r\n};\r\n","import React from \"react\";\r\nimport Product from \"../components/Product\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProductList extends React.Component {\r\n  state = { pList: [] };\r\n\r\n  componentDidMount() {\r\n    this.getProducts();\r\n  }\r\n\r\n  getProducts() {\r\n    const url =\r\n      \"https://raw.githubusercontent.com/mdmoin7/Random-Products-Json-Generator/master/products.json\";\r\n    Axios.get(url)\r\n      .then((res) => {\r\n        console.log(\"success\", res);\r\n        this.setState({ pList: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error\", err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { pList } = this.state;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        {pList.map((value) => (\r\n          <Product\r\n            pData={value}\r\n            key={value.productId}\r\n            currencyCode={this.props.selectedCurrency}\r\n          />\r\n        ))}\r\n        {/* <Product pData={pList} wishlist={true} /> */}\r\n        {/* <Product /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStoreToProps = (store) => {\r\n  return {\r\n    selectedCurrency: store.currency,\r\n  };\r\n};\r\n// connect(how to connect)(what to connect/component)\r\nexport default connect(mapStoreToProps)(ProductList);\r\n"],"sourceRoot":""}